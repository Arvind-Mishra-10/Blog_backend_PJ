spring:
  application:
    name: pj

  cloud:
    discovery:
      enabled: true

  datasource:
    url: ${URL:jdbc:mysql://localhost:3306/blog?useSSL=false&serverTimezone=UTC}
    username: ${USER:root}
    password: ${PASSWORD:12345}
    # ✅ Optimization: Reduced HikariCP connection pool size to conserve memory
    hikari:
      minimum-idle: 1           # Minimum number of idle connections
      maximum-pool-size: 5     # Limit pool size to a reasonable number
      idle-timeout: 30000       # 30 seconds (must be less than `max-lifetime`)
      max-lifetime: 60000       # 60 seconds
      connection-timeout: 20000 # Timeout for waiting for a connection (20 seconds)


  jpa:
    hibernate:
      ddl-auto: update
    properties:
      # ✅ Removed Hibernate Dialect warning
      hibernate:
        max_fetch_depth: 1
        generate_statistics: false # Turn off Hibernate's debug stats to save memory
        show_sql: false # Avoid logging excessive SQL queries in production

server:
  port: ${PORT:8080} # ✅ Railway provides PORT env var; default fallback should be 8080
  # ✅ Added server-level optimizations for Tomcat
  tomcat:
    threads:
      max: 25            # Max 50 worker threads to handle requests
      min-spare: 5       # Minimum of 5 threads at all times

logging:
  # ✅ Reduced log verbosity to WARN for better memory efficiency
  level:
    root: DEBUG
    org:
      springframework:
        security: DEBUG
      hibernate:
        SQL: DEBUG
    org.springframework.boot.web.embedded.tomcat: DEBUG

jwt:
  secret: dXoaYH1h2v3fBLOyqv5kqyb5uV9XWgW9XKqFwHrhGfg=
  expiration: 3600000

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: ${DEFAULT_ZONE:http://localhost:8761/eureka/}
#https://donefor.up.railway.app/eureka/

# Management config for actuator endpoints
management:
  endpoints:
    web:
      exposure:
        include: health
  endpoint:
    health:
      show-details: always
  health:
    circuitbreakers:
      enabled: true # ✅ `circuitbreakers` must match your library (resilience4j-health)

resilience4j:
  circuitbreaker:
    instances:
      commentBreaker:
        slidingWindowSize: 10
        failureRateThreshold: 50
        minimumNumberOfCalls: 5
        slowCallRateThreshold: 50
        slowCallDurationThreshold: 2000
        permittedNumberOfCallsInHalfOpenState: 5
        waitDurationInOpenState: 10s
        automaticTransitionFromOpenToHalfOpenEnabled: true
        registerHealthIndicator: true